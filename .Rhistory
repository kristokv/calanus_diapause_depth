cap.bio_stand=rep(c(0,1,0,1),each=length(firstday:lastday)),
kola.spr_stand=rep(c(0,0,1,1),each=length(firstday:lastday)))
B <- 1000 #The number of bootstrap samples
boot_array<-array(NA,dim=c(length(cfin_stages),dim(newdat)[1],B))
dimnames(boot_array)<-list(cfin_stages,1:dim(newdat)[1],1:B)
#Bootstrap:
subdat$Year<-as.factor(subdat$Year)
yrs <- as.character(levels(subdat$Year))
#For bootstrapping over year:
Data.list <- split(subdat,subdat$Year)
names(Data.list) <- yrs
#For bootstrapping over year:
Data.list <- split(subdat,subdat$Year)
names(Data.list) <- yrs
for(z in 1:B){
#Sample years
yrs.B <- sample(yrs,size=length(yrs),replace=T)
#constructing a bootstrap data set of the sampled Years:
Data.b <- NULL
for(j in 1:length(yrs.B)){
Data.b.j <- Data.list[[yrs.B[j]]] #taking the data for Year #j in the sample
Data.b.j$YEAR <- yrs[j]  #renaming the Year the #j in the original order
Data.b <- rbind.data.frame(Data.b,Data.b.j) #creating a dataframe of samples
}
#redefining the YEAR variable (same number of levels as original, some might have zero occurence):
Data.b$YEAR <- factor(x=as.character(Data.b$YEAR),levels=levels(subdat$Year))
###
for(stage in cfin_stages){
wmd<- Data.b[,paste0(stage,"_wmd")]
mod_wmd<-gam(formula(paste(Xvar, paste(Yvar, collapse="+"))),data=Data.b)
pred_doy<-predict.gam(mod_wmd,newdata = newdat,se.fit = TRUE,type = "response")
boot_array[stage,,z]<-pred_doy$fit
} #stage
save(boot_array,file="../bootstrap/DOYxCap_DOYxKola.rda")
} #for z in 1: B
subdat<-depthdat_PINRO
covar<-"cap.bio"
subdat$var<-subdat[,covar]
firstday<-min(subdat$Abs.day)-1;lastday<-max(subdat$Abs.day)+1
var<-seq(min(subdat$var),max(subdat$var),length.out = 2)
selpoints<-data.frame(Lon.dec=c(14,20,32),Lat.dec=c(69,72,73))
for(p in 1:length(selpoints$Lon.dec)){
newdat<-data.frame(Abs.day=rep(firstday:lastday,2),
var=rep(var,each=length(firstday:lastday)),
Bathy=rep(300,length(firstday:lastday)*2),
Lon.dec=rep(selpoints$Lon.dec[p],length(firstday:lastday)*2),
Lat.dec=rep(selpoints$Lat.dec[p],length(firstday:lastday)*2))
assign(paste0("newdat_",p),newdat)
}
Yvar<-list(
"s(Abs.day,k=5)",
"te(Lon.dec,Lat.dec,k=5)",
"te(Lon.dec,Lat.dec,Abs.day,k=c(4,4,3))",
"s(log(Bathy),k=3)",
"te(Lon.dec,Lat.dec,Abs.day,by=var,k=c(4,4,3))"
)
Xvar<-"wmd~"
B <- 1000 #The number of bootstrap samples
boot_array<-array(NA,dim=c(length(cfin_stages),3,dim(newdat_1)[1],B))
dimnames(boot_array)<-list(cfin_stages,1:3,1:dim(newdat_1)[1],1:B)
#Bootstrap:
subdat$Year<-as.factor(subdat$Year)
yrs <- as.character(levels(subdat$Year))
#For bootstrapping over year:
Data.list <- split(subdat,subdat$Year)
names(Data.list) <- yrs
paste0("../bootstrap/tensor_pos_absday_by_",covar,".rda")
Xvar<-"wmd~"
B <- 1000 #The number of bootstrap samples
boot_array<-array(NA,dim=c(length(cfin_stages),3,dim(newdat_1)[1],B))
dimnames(boot_array)<-list(cfin_stages,1:3,1:dim(newdat_1)[1],1:B)
#Bootstrap:
subdat$Year<-as.factor(subdat$Year)
yrs <- as.character(levels(subdat$Year))
#For bootstrapping over year:
Data.list <- split(subdat,subdat$Year)
names(Data.list) <- yrs
for(z in 1:B){
#Sample years
yrs.B <- sample(yrs,size=length(yrs),replace=T)
#constructing a bootstrap data set of the sampled Years:
Data.b <- NULL
for(j in 1:length(yrs.B)){
Data.b.j <- Data.list[[yrs.B[j]]] #taking the data for Year #j in the sample
Data.b.j$YEAR <- yrs[j]  #renaming the Year the #j in the original order
Data.b <- rbind.data.frame(Data.b,Data.b.j) #creating a dataframe of samples
}
#redefining the YEAR variable (same number of levels as original, some might have zero occurence):
Data.b$YEAR <- factor(x=as.character(Data.b$YEAR),levels=levels(subdat$Year))
###
for(stage in cfin_stages){
wmd<- Data.b[,paste0(stage,"_wmd")]
mod_wmd<-gam(formula(paste(Xvar, paste(Yvar, collapse="+"))),data=Data.b)
for(p in 1:length(selpoints$Lon.dec)){
newdat<-get(paste0("newdat_",p))
pred_doy<-predict.gam(mod_wmd,newdata = newdat,se.fit = TRUE,type = "response")
boot_array[stage,p,,z]<-pred_doy$fit
} #p
} #stage
save(boot_array,file=paste0("../bootstrap/tensor_pos_absday_by_",covar,".rda"))
}
library(maps)
library(mgcv)
library(readxl)
library(marmap)
figpath<-"../figures/"
tablepath<-"../tables/"
datapath<-("../../Data_Arctic_Calanus/")
####Load data####
#PINRO data on Cfin:
load(paste0(datapath,"Cfin/PINRO_raw.rda"))
cfin_stages<-colnames(PINRO_frame)[33:39]
any_cfin<-apply(PINRO_frame[,cfin_stages],1,function (x) length(x[!is.na (x)]))
#Remove rows with no stage-specific Cfin values:
PINRO_frame<-PINRO_frame[any_cfin>0,];rm(any_cfin)
PINRO_frame$Depth.layer <- NA
PINRO_frame$Depth.layer<- with(PINRO_frame, ifelse (Upper.depth <=20 & !is.na(Upper.depth) & Lower.depth<=60 & !is.na (Lower.depth),"Upper",Depth.layer))  #Upper<=20 Lower <=60, N:12506
PINRO_frame$Depth.layer<- with(PINRO_frame, ifelse (Upper.depth>=40 & Upper.depth<=60 &!is.na(Upper.depth) & Lower.depth<=120 & !is.na (Lower.depth),"Middle",Depth.layer)) #Upper 40-60 Lower <= 120, N:5281
PINRO_frame$Depth.layer <- with(PINRO_frame, ifelse (Upper.depth>= 90 &!is.na(Upper.depth),"Lower",Depth.layer)) #Upper > 90, N:7164
PINRO_frame <- PINRO_frame[!is.na(PINRO_frame$Depth.layer),]
#Sum= 21829 	(Missing 1039 / < 5 %)
PINRO_frame$Depth.layer<-as.factor(PINRO_frame$Depth.layer)
PINRO_frame$Depth<-as.numeric(PINRO_frame$Depth)
PINRO_frame$Time<-PINRO_frame$Hour.start+PINRO_frame$Min.start/60
#Get bathymetry:
#Fetch data on NOAA servers and write on disk
bat <- getNOAA.bathy(min(PINRO_frame$Lon.dec)-1,max(PINRO_frame$Lon.dec)+1,
min(PINRO_frame$Lat.dec)-1,max(PINRO_frame$Lat.dec)+1,res = 1, keep=TRUE)
PINRO_frame$Bathy<--get.depth(mat=bat,x=cbind(PINRO_frame$Lon.dec,PINRO_frame$Lat.dec),locator=FALSE,distance=FALSE)$depth
#Bathymetry is more reliable than depth variable in PINRO_frame, which has several obvious errors
#Remove unnecessary columns:
PINRO_frame<-PINRO_frame[,-c(1:9,13:20,23:32,40:50)]
#Fish and temperature indices:
cap.bio<-as.data.frame(read_excel("../../fish_data/Capelin_From_Tara_Marshall.xls",sheet=2))
# her.bio<-read.table(file="../fish_data/Copy.of.Herring.seastar.csv",header=T,sep=";")
# her.bio<-her.bio[1:56,]
# her.bio<-data.frame(apply(her.bio,2,function (x) as.numeric(as.character(x))))
Kola.temp<-read.table(file="../../temperature/temp.kola.txt",header=T)
Kola.temp$Dec.lag1 <- c(NA,Kola.temp$Dec[1:(dim(Kola.temp)[1]-1)])
Kola.temp$Win.temp<-apply(Kola.temp[,c("Dec.lag1","Jan","Feb")],1,mean)
Kola.temp$Spr.temp<-apply(Kola.temp[,c("Mar","Apr","May")],1,mean)
Kola.temp$Sum.temp = apply(Kola.temp[,c("Jun","Jul","Aug")],1,mean)
Kola.temp$Aut.temp = apply(Kola.temp[,c("Sep","Oct","Nov")],1,mean)
#Strong correlation between different Kola temp indices, esp. spring/summer
PINRO_frame$cap.bio<-cap.bio$Capelin[match(PINRO_frame$Year,cap.bio$Year)]
#PINRO_frame$her.bio<-her.bio$TotBM[match(PINRO_frame$Year,her.bio$Year)]
PINRO_frame$kola.spr<-Kola.temp$Spr.temp[match(PINRO_frame$Year,Kola.temp$Year)]
PINRO_frame$kola.sum<-Kola.temp$Sum.temp[match(PINRO_frame$Year,Kola.temp$Year)]
rm(cap.bio);rm(Kola.temp)
####Estimate WMD for all stations with min. 2 depth layers observed####
PINRO_frame$ID<-do.call(paste,PINRO_frame[,c(3,13:15,19)]) #factor to find observations from same station but diff. depth
#(include time as factor because same station is usually only sampled at one time, but 2 stations are sampled at different times, same day
PINRO_frame_depth<-PINRO_frame[sapply(PINRO_frame$ID,FUN=function (x) sum(PINRO_frame$ID==x))>=2,]
#Weighted mean depth of raw data, Following Aarflot et al. 2018, L&O
depthdat_PINRO<-PINRO_frame_depth[!duplicated(PINRO_frame_depth$ID),]
depthdat_PINRO<-depthdat_PINRO[,-c(6:12)] #Remove abundance columns
depthdat_PINRO[,paste0(cfin_stages,"_wmd")]<-NA
depthdat_PINRO[,paste0(cfin_stages,"_sd")]<-NA
for (i in 1:length(depthdat_PINRO$ID)){
station<-PINRO_frame_depth[PINRO_frame_depth$ID%in%depthdat_PINRO$ID[i],]
depths<-station$Sampl.depth.avg #Mean depth of layers
depthints<-station$Lower.depth-station$Upper.depth
for(stage in cfin_stages){
abunm3<-station[,stage]
#Check that there are positive values and that we have more than one non-NA value
if(!all(is.na(abunm3)) & sum(abunm3,na.rm=TRUE)>0 & length(abunm3[!is.na (abunm3)])>1){
depths_stage<-depths[!is.na(abunm3)]
depthints_stage<-depthints[!is.na(abunm3)]
abunm3<-abunm3[!is.na(abunm3)]
wmean<-sum(sapply(1:length(abunm3),function(x)((depthints_stage[x]*abunm3[x]*depths_stage[x])/sum(abunm3*depthints_stage))))
#To avoid NAs due to slight decimal difference when calculating wmean^2 and the base of WSD for 1 positive observation in R:
wsd_base<-sum(sapply(1:length(abunm3),function(x)((depthints_stage[x]*abunm3[x]*depths_stage[x]^2)/sum(abunm3*depthints_stage))))
depthdat_PINRO[i,paste0(stage,"_wmd")]<-wmean
if(all.equal(wsd_base,wmean^2)!=TRUE){
depthdat_PINRO[i,paste0(stage,"_sd")]<-sqrt(wsd_base-wmean^2)
}else{
depthdat_PINRO[i,paste0(stage,"_sd")]<-0
}
}
}
}
#Map the distribution of all data and of WMD data
# Create nice color palettes
rm(bat)
#####Model 2: Including spatial term####
subdat<-depthdat_PINRO
#Plot:
firstday<-min(subdat$Abs.day)-1;lastday<-max(subdat$Abs.day)+1
xlims<-c(firstday,lastday)
ylims<-c(-400,0)
cols<-c("blue","red")
covar<-"cap.bio"
subdat<-depthdat_PINRO
covar<-"cap.bio"
subdat$var<-subdat[,covar]
firstday<-min(subdat$Abs.day)-1;lastday<-max(subdat$Abs.day)+1
var<-seq(min(subdat$var),max(subdat$var),length.out = 2)
selpoints<-data.frame(Lon.dec=c(14,20,32),Lat.dec=c(69,72,73))
for(p in 1:length(selpoints$Lon.dec)){
newdat<-data.frame(Abs.day=rep(firstday:lastday,2),
var=rep(var,each=length(firstday:lastday)),
Bathy=rep(300,length(firstday:lastday)*2),
Lon.dec=rep(selpoints$Lon.dec[p],length(firstday:lastday)*2),
Lat.dec=rep(selpoints$Lat.dec[p],length(firstday:lastday)*2))
assign(paste0("newdat_",p),newdat)
}
Yvar<-list(
"s(Abs.day,k=5)",
"te(Lon.dec,Lat.dec,k=5)",
"te(Lon.dec,Lat.dec,Abs.day,k=c(4,4,3))",
"s(log(Bathy),k=3)",
"te(Lon.dec,Lat.dec,Abs.day,by=var,k=c(4,4,3))"
)
Xvar<-"wmd~"
B <- 1000 #The number of bootstrap samples
subdat<-depthdat_PINRO
#Plot:
firstday<-min(subdat$Abs.day)-1;lastday<-max(subdat$Abs.day)+1
xlims<-c(firstday,lastday)
ylims<-c(-400,0)
cols<-c("blue","red")
covar<-"cap.bio"
subdat$var<-subdat[,covar]
var<-seq(min(subdat$var),max(subdat$var),length.out = 2)
selpoints<-data.frame(Lon.dec=c(14,20,32),Lat.dec=c(69,72,73))
plot(PINRO_frame_depth$Lon.dec,PINRO_frame_depth$Lat.dec,pch=20,cex=0.5,col="dark grey")
map(add=T,fill=T)
points(selpoints,col="red",pch=20,cex=2)
for(p in 1:length(selpoints$Lon.dec)){
newdat<-data.frame(Abs.day=rep(firstday:lastday,2),
var=rep(var,each=length(firstday:lastday)),
Bathy=rep(300,length(firstday:lastday)*2),
Lon.dec=rep(selpoints$Lon.dec[p],length(firstday:lastday)*2),
Lat.dec=rep(selpoints$Lat.dec[p],length(firstday:lastday)*2))
assign(paste0("newdat_",p),newdat)
}
Yvar<-list(
"s(Abs.day,k=5)",
"te(Lon.dec,Lat.dec,k=5)",
"te(Lon.dec,Lat.dec,Abs.day,k=c(4,4,3))",
"s(log(Bathy),k=3)",
"te(Lon.dec,Lat.dec,Abs.day,by=var,k=c(4,4,3))"
)
Xvar<-"wmd~"
bootstrap<-TRUE
rm(boot_array)
if(bootstrap==TRUE){
load(file=paste0("../bootstrap/tensor_pos_absday_by_",covar,".rda"))
}
par(mfrow=c(length(cfin_stages[-7]),3),mar=rep(0.2,4),oma=c(3.5,4.5,1,.5))
for(stage in cfin_stages[-7]){
wmd<-subdat[,paste0(stage,"_wmd")]
mod_wmd<-gam(formula(paste(Xvar, paste(Yvar, collapse="+"))),data=subdat)
print(paste0(stage," Rsq:",round(summary(mod_wmd)$r.sq,2),
" GCV:",round(summary(mod_wmd)$sp.criterion,2)))
for(p in 1:length(selpoints$Lon.dec)){
newdat<-get(paste0("newdat_",p))
pred_doy<-predict.gam(mod_wmd,newdata = newdat,se.fit = TRUE,type = "response")
newdat$pred<-pred_doy$fit
#Nominal CIs:
newdat$pred_lo<-pred_doy$fit+1.96*pred_doy$se.fit
newdat$pred_hi<-pred_doy$fit-1.96*pred_doy$se.fit
#Bootstrapped CIs:
if(bootstrap==TRUE){
boot_pred<-boot_array[stage,p,,]
newdat$pred_lo<-apply(boot_pred,1,quantile,0.025)
newdat$pred_hi<-apply(boot_pred,1,quantile,0.975)}
plot(1, type="n", xlab="", ylab="", xlim=xlims, ylim=ylims,xaxs="i",yaxs="i",axes=FALSE,frame=TRUE)
if(p==1){Axis(side=2,at=seq(0,-300,by=-100));
mtext(side=2,gsub("C.finm.","",stage),line=2,outer=FALSE)}
if(stage==cfin_stages[1]){mtext(side=3,p,line=0,outer=FALSE)}
if(stage==cfin_stages[1] & p==3){legend("bottomright",legend=round(var,2),title=covar,cex=1.25,pch=21,pt.bg=cols,bty="n")}
if(stage==cfin_stages[6]){Axis(side=1)}
for(x in 1:2){
points(firstday:lastday,-newdat$pred[newdat$var==var[x]],type="l",col=cols[x])
polygon(x=c(firstday:lastday,lastday:firstday),y=c(-newdat$pred_lo[newdat$var==var[x]],rev(-newdat$pred_hi[newdat$var==var[x]])),
col=adjustcolor(cols[x],alpha.f=0.2),border=NA)
# points(subdat$Abs.day[subdat$var>var[x]-diff(var)[1]/2 & subdat$var<var[x]+diff(var)[1]/2],
#        -wmd[subdat$var>var[x]-diff(var)[1]/2 & subdat$var<var[x]+diff(var)[1]/2],pch=20,cex=0.25,col=cols[x])
}
}
}
mtext(side=1,"Day-of-year",line=2,outer = TRUE)
mtext(side=2,"Predicted WMD",line=3,outer = TRUE)
getwd()
setwd( "/Users/kristina/Documents/Arctic_Calanus/overwinter_habitat/github/")
library(maps)
library(mapproj)
source("arcticmap.r") #Source to plot polar-centered map
#source("../rscripts/image_scale.R")
lifestages<-c(paste0("Cglac",1:5),paste0("Cglac6",c("f","m")),paste0("Chypc",1:5),paste0("Chypc6",c("f","m")))
lifestages_gla<-c(paste0("Cglac",1:5),paste0("Cglac6",c("f","m")))
lifestages_hyp<-c(paste0("Chypc",1:5),paste0("Chypc6",c("f","m")))
load(paste0("all_dat.rda"))
#Only select data with 2 or more depth layers:
names(all_dat[,c(1:3,5:6,11:12)])
rm(all_dat)
setwd("/Users/kristina/Documents/Arctic_Calanus/overwinter_habitat")
figpath<-"revision_biol_bull/figures/"
tablepath<-"tables/"
datapath<-("../Data_Arctic_Calanus/")
source("../rscripts/arcticmap.r") #Source to plot polar-centered map
lifestages<-c(paste0("Cglac",1:5),paste0("Cglac6",c("f","m")),paste0("Chypc",1:5),paste0("Chypc6",c("f","m")))
lifestages_gla<-c(paste0("Cglac",1:5),paste0("Cglac6",c("f","m")))
lifestages_hyp<-c(paste0("Chypc",1:5),paste0("Chypc6",c("f","m")))
load(paste0(datapath,"all_dat_updated_2018.rda"))
names(all_dat[,c(1:3,5:6,9:10)])
rm(list=ls())
setwd("/Users/kristina/Documents/Arctic_Calanus/overwinter_habitat/github/")
library(maps)
library(mapproj)
source("arcticmap.r") #Source to plot polar-centered map
#source("../rscripts/image_scale.R")
lifestages<-c(paste0("Cglac",1:5),paste0("Cglac6",c("f","m")),paste0("Chypc",1:5),paste0("Chypc6",c("f","m")))
lifestages_gla<-c(paste0("Cglac",1:5),paste0("Cglac6",c("f","m")))
lifestages_hyp<-c(paste0("Chypc",1:5),paste0("Chypc6",c("f","m")))
load(paste0("all_dat.rda"))
#Only select data with 2 or more depth layers:
#Create factor to find observations from same station (same day and location but different depth)
all_dat$ID<-do.call(paste,all_dat[,c(1:3,5:6,11:12)])
all_dat_depth<-data.frame(matrix(ncol=ncol(all_dat),nrow=0))
colnames(all_dat_depth)<-colnames(all_dat)
for (i in 1:length(unique(all_dat$ID))){
station<-all_dat[all_dat$ID%in%unique(all_dat$ID)[i],]
bottomdep<-unique(station$depth)
station<-station[station$updep<bottomdep,] #Remove any samples with upper depth > bottom depth
if(dim(station)[1]>=2){
all_dat_depth<-rbind(all_dat_depth,station)
}
}
upbot<-c(0,200,400,800)
lowbot<-c(200,400,800,5000)
cols<- rev(c("#225ea8","#41b6c4","#a1dab4","#ffffcc"))
vals<-NULL
species_name<-c("C. glacialis", "C. hyperboreus");names(species_name)<-c("gla","hyp")
#For plotting geographical areas:
lats<-c(90,75,77,75,70,69,62,69,73,72,50,74,68)
lons<-c(0,34,75,120,145,180,183,-140,-110,-65,-60,-10,8)
geo_names<-c("Arctic Ocean","Barents","Kara","Laptev","East Siberian","Chukchi",
"Bering","Beaufort","Canadian Archipelago","Baffin Bay","Canadian Atlantic",
"Greenland","Norwegian")
layout(matrix(c(1:3,6,1,4:6),nrow=4,byrow=FALSE),
heights=c(0.3,0.3,0.3,0.1))
par(mgp=c(3,0,0),mar=rep(0,4),oma=c(0,0,1,0))
arcticmap(add=F,map_labels = F,map_grid = F,col="grey")
#Add labels:
text(mapproject(lons,lats,proj_str,parameters=proj_params,orientation=c(90, 0, rotation)),
geo_names,cex=1.5)
mtext(side=3,"A.",adj=0.3,line=-1,font = 2)
for(species in c("gla","hyp")){
#1. Plot full dataset:
subdat<-all_dat[all_dat$month>=9 | all_dat$month<=4,] #winter data
subdat$tot_abun<-subdat[,paste0("C",species,"_abunm3")]
arcticmap(add=F,map_labels = F,map_grid = F,col="grey")
mtext(side=3,bquote(paste(italic(.(species_name[species])),": All data")),line=-1.25,font=3)
if(species=="gla"){mtext(side=3,"B.",adj=0.08,line=-1,font = 2)}
if(species=="hyp"){mtext(side=3,"C.",adj=0.08,line=-1,font = 2)}
for(bot in 1:length(upbot)){ #one column per depth layer
subdat_dep<-subdat[subdat$depth>=upbot[bot] & subdat$depth<lowbot[bot] & subdat$tot_abun>0,]
vals<-c(vals,range(log(subdat_dep$tot_abun+1)))
with(mapproject(subdat_dep$lon,subdat_dep$lat,proj_str,parameters=proj_params,orientation=c(90, 0, rotation)),
points(x,y,pch=21,lwd=0.25,bg=adjustcolor(cols[bot],alpha=0.4),cex=0.3*log(subdat_dep$tot_abun+1)))
}
#2. Plot dataset with multiple obs. in depth:
subdat<-all_dat_depth[all_dat_depth$month>=9 | all_dat_depth$month<=4,] #winter data
subdat$tot_abun<-subdat[,paste0("C",species,"_abunm3")]
arcticmap(add=F,map_labels = F,map_grid = F,col="grey")
mtext(side=3,bquote(paste(italic(.(species_name[species])),": Multiple depths")),line=-1.25,font=3)
if(species=="gla"){mtext(side=3,"D.",adj=0.08,line=-1,font = 2)}
if(species=="hyp"){mtext(side=3,"E.",adj=0.08,line=-1,font = 2)}
for(bot in 1:length(upbot)){ #one column per depth layer
subdat_dep<-subdat[subdat$depth>=upbot[bot] & subdat$depth<lowbot[bot] & subdat$tot_abun>0,]
vals<-c(vals,max(log(subdat_dep$tot_abun+1)),min(log(subdat_dep$tot_abun+1)))
with(mapproject(subdat_dep$lon,subdat_dep$lat,proj_str,parameters=proj_params,orientation=c(90, 0, rotation)),
points(x,y,pch=21,lwd=0.25,bg=adjustcolor(cols[bot],alpha=0.4),cex=0.3*log(subdat_dep$tot_abun+1)))
}
}
par(mar=rep(0,4))
plot(1, type="n",axes=FALSE,xlim=c(0,4),ylim=c(0,10),xlab="",ylab="")
legend("left",cex=1.5,horiz=TRUE,bty="n",x.intersp=0.4,
legend=paste(upbot,lowbot,sep="-"),
pt.bg=cols,pch=21,pt.lwd=0.25,title="Bottom depth (m)")
legend("right",cex=1.5,horiz=TRUE,bty="n",x.intersp=0.4,
legend=format(round(seq(min(vals),max(vals),length=5),1),trim=T),
col=1,pch=20,pt.cex=0.3*seq(min(vals),max(vals),length=5),
title=expression(paste("Abundance (log"["e"]*"ind.",m^-3,"+1)")))
dev.off()
#Divide data based on bottom depth and sampling month
upbot<-c(0,200,400,800)
lowbot<-c(200,400,800,5000)
species_name<-c("C. glacialis", "C. hyperboreus");names(species_name)<-c("gla","hyp")
species<-"gla"
par(mfrow=c(length(lifestages_gla),length(upbot)),mgp=c(3,0,0),mar=c(0.2,0.5,0.2,0.5),oma=c(2.5,3.5,3.5,0.2))
for (j in 1:length(lifestages_gla)){ #one plot per stage
lifestage<-get(paste0("lifestages_",species))[j]
for(bot in 1:length(upbot)){ #one column per depth layer
subdat<-all_dat[all_dat$depth>=upbot[bot] & all_dat$depth<lowbot[bot] &
!is.na(all_dat[,paste0(lifestage,"_abunm3_corr")]) & all_dat[,paste0(lifestage,"_abunm3_corr")]>0,]
subdat_sum<-subdat[subdat$month>=5 & subdat$month<9,] #summer data
subdat_win<-subdat[subdat$month>=9 | subdat$month<=4,] #winter data
if(bot<length(upbot)){plot(1,type="n",xlab="",ylab="",xlim=c(0,11),ylim=c(800,0),axes=FALSE,frame=T,xaxs="i",yaxs="i")}
if(bot==length(upbot)){plot(1,type="n",xlab="",ylab="",xlim=c(0,11),ylim=c(5000,0),axes=FALSE,frame=T,xaxs="i",yaxs="i")}
#Legends
if(bot==1){mtext(side=2,gsub(paste0(species,"c"),"",lifestage),line=2.5,cex=1)}
if(j==1){mtext(side=3,bquote(paste(bold(.(LETTERS[bot])),". ",.(upbot[bot]),"-",.(lowbot[bot]),"m")),line=2.2,cex=1)}
if(j==1){Axis(side=3,cex.axis=1,tck=-0.05,at=seq(0,10,by=2),labels=seq(0,10,by=2))}
if(j==7){Axis(side=1,cex.axis=1,tck=-0.05,at=seq(1,11,by=2),labels=seq(10,0,by=-2))}
if(bot<length(upbot)){Axis(side=2,cex.axis=1,tck=-0.05,at=c(0,200,400,600))}
if(bot==length(upbot)){Axis(side=2,cex.axis=1,tck=-0.05,at=c(0,2000,4000))}
#Plot every summer observation stacked:
if(dim(subdat_sum)[1]>0){
for(i in 1:dim(subdat_sum)[1]){
rect(0,subdat_sum$lowdep[i],log(subdat_sum[i,paste0(lifestage,"_abunm3_corr")]+1),subdat_sum$updep[i],
col=adjustcolor("red",alpha=0.2),border=NA)
}
}
#Plot every winter observation stacked:
par(new=TRUE)
if(dim(subdat_win)[1]>0){
for(i in 1:dim(subdat_win)[1]){
rect(11-log(subdat_win[i,paste0(lifestage,"_abunm3_corr")]+1),subdat_win$lowdep[i],11,subdat_win$updep[i],
col=adjustcolor("blue",alpha=0.2),border=NA)
}
}
rect(0,lowbot[bot],100,5000,col="grey",border=NA) #Bottom depth
box()
}
}
mtext(side=1,bquote(paste(italic(.(species_name[species]))," winter abundance (log"["e"],"ind.",m^-3,"+1)")),line=1.2,cex=1,outer=TRUE,col="blue")
mtext(side=3,bquote(paste(italic(.(species_name[species]))," summer abundance (log"["e"],"ind.",m^-3,"+1)")),line=0.5,cex=1,outer=TRUE,col="red")
mtext(side=2,"Depth (m)",line=0.5,cex=1,outer=TRUE)
depthdat<-all_dat_depth[!duplicated(all_dat_depth$ID),] #Dataframe with 1 row per station
names(depthdat[,-c(13:60)])
depthdat<-all_dat_depth[!duplicated(all_dat_depth$ID),] #Dataframe with 1 row per station
depthdat<-depthdat[,-c(13:60)] #Remove unnecessary columns
depthdat[,paste0(lifestages,"_wmd")]<-NA
depthdat[,paste0(lifestages,"_sd")]<-NA
depthint<-50
layers<-seq(0,max(depthdat$depth),by=depthint) #Top of depth intervals from surface to bottom
deptharray<-array(NA,dim=c(length(lifestages),length(layers),dim(depthdat)[1]))
dimnames(deptharray)<-list(lifestages,layers)
for (i in 1:length(depthdat$ID)){
station<-all_dat_depth[all_dat_depth$ID%in%depthdat$ID[i],]
#Depth intervals in station:
station_meters<-lapply(1:length(station$updep),function(x){c(round(station$updep[x]):round(station$lowdep[x]))})
#Average abundance per 50 m depth bin:
for(j in 1:length(layers)){
meters_incl<-seq(layers[j],layers[j]+depthint) #Meters in depth bin
intersect_m<-unlist(lapply(1:length(station_meters),function(x){length(intersect(unlist(station_meters[x]),meters_incl))})) #Overlap between depth bin and station intervals
station_layer<-station[intersect_m>=5, ] #Select observations with overlapping depth (min 5m)
if(dim(station_layer)[1]>0){
deptharray[,j,i]<-colMeans(station_layer[,paste0(lifestages,"_abunm3_corr")],na.rm=TRUE)
}
}
#Find  WMD&SD, following Aarflot et al. 2018, L&O
for(stage in lifestages){
abunm3<-deptharray[stage,,i]
#Check that there are positive values and more than one non-NA value
if(!all(is.na(abunm3)) & sum(abunm3,na.rm=TRUE)>0 & length(abunm3[!is.na (abunm3)])>1){
abunm3<-abunm3[!is.na(abunm3)]
depths<-as.numeric(names(abunm3))+depthint/2 #Mean depth of layers
wmean<-sum(sapply(1:length(abunm3),function(x)((depthint*abunm3[x]*depths[x])/sum(abunm3*depthint))))
depthdat[i,paste0(stage,"_wmd")]<-wmean
#To avoid NAs due to slight decimal difference when calculating wmean^2 and the base of WSD for 1 positive observation in R:
wsd_base<-sum(sapply(1:length(abunm3),function(x)((depthint*abunm3[x]*depths[x]^2)/sum(abunm3*depthint))))
if(all.equal(wsd_base,wmean^2)!=TRUE){
depthdat[i,paste0(stage,"_sd")]<-sqrt(wsd_base-wmean^2)
}else{
depthdat[i,paste0(stage,"_sd")]<-0
}
}
}
}
####Boxplot of variation in WMD/SD per stage (Fig. 4)####
subdat_win<-depthdat[depthdat$month>=9 |depthdat$month<=4, ]
subdat_sum<-depthdat[depthdat$month<9 & depthdat$month>4, ]
ptsize=0.4
jitter_val<-0.3
par(mfcol=c(2,2),mar=rep(0.1,4),oma=c(1.5,2.5,1.5,0),mgp=c(3,0.5,0))
for(species in c("gla","hyp")){
lifestages_spec<-get(paste0("lifestages_",species))
labels_spec<-gsub("c","",gsub(species,"",lifestages_spec))
for(var in c("_wmd","_sd")){
ymin<-(-2500)
if(var=="_sd"){ymin<-(-1500)}
meanval_win<-apply(subdat_win[,paste0(lifestages_spec,var)],2,FUN=mean,na.rm=TRUE)
meanval_sum<-apply(subdat_sum[,paste0(lifestages_spec,var)],2,FUN=mean,na.rm=TRUE)
sdval_win<-apply(subdat_win[,paste0(lifestages_spec,var)],2,FUN=sd,na.rm=TRUE)
sdval_sum<-apply(subdat_sum[,paste0(lifestages_spec,var)],2,FUN=sd,na.rm=TRUE)
stripchart(-subdat_win[,paste0(lifestages_spec,var)],method="jitter",jitter=jitter_val,
ylim=c(ymin,0),yaxs="i",vertical=TRUE,pch=20,col=adjustcolor("blue",alpha=0.3),
cex=ptsize,lwd=1,axes=FALSE,frame.plot=TRUE)
stripchart(-subdat_sum[,paste0(lifestages_spec,var)],method="jitter",jitter=jitter_val,
vertical=TRUE,pch=20,col=adjustcolor("red",alpha=0.3),cex=ptsize,lwd=1,add=TRUE)
if(species=="gla"){Axis(side=2,at=seq(ymin+500,0,500),labels=seq(abs(ymin+500),0,-500))}
if(var=="_sd"){Axis(side=1,at=1:7,labels=labels_spec)}
arrows(0.9:6.9,-(meanval_win+sdval_win),0.9:6.9,-(meanval_win-sdval_win),code=3,length=0.04,angle=90,lwd=1.7)
points(0.9:6.9,-meanval_win,pch=23,cex=1.35,bg="blue",lwd=1.6)
arrows(1.1:7.1,-(meanval_sum+sdval_sum),1.1:7.1,-(meanval_sum-sdval_sum),code=3,length=0.04,angle=90,lwd=1.7)
points(1.1:7.1,-meanval_sum,pch=23,cex=1.35,bg="red",lwd=1.6)
#Test for significant differences:
sign_diff<-unlist(mapply(wilcox.test,subdat_win[,paste0(lifestages_spec,var)],subdat_sum[,paste0(lifestages_spec,var)])[3,])
for(x in 1:7){
if(sign_diff[x]<0.01){text(x,ymin+200,"*",cex=2)}
}
}
}
mtext(side=3,bquote(paste(bold(A.)," ",italic("C. glacialis"))),line=0,font=3,adj=0.2,outer=TRUE)
mtext(side=3,bquote(paste(bold(B.)," ",italic("C. hyperboreus"))),line=0,font=3,adj=0.8,outer=TRUE)
mtext(side=2,"WMD (m)",line=1.25,outer=TRUE,adj=.8)
mtext(side=2,"SD (m)",line=1.25,outer=TRUE,adj=.2)
dev.off()
