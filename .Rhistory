rect(0,subdat_sum$lowdep[i],log(subdat_sum[i,paste0(lifestage,"_abunm3_corr")]+1),subdat_sum$updep[i],
col=adjustcolor("red",alpha=0.5),border=NA)
}
}
#Plot every winter observation stacked:
par(new=TRUE)
if(dim(subdat_win)[1]>0){
for(i in 1:dim(subdat_win)[1]){
rect(11-log(subdat_win[i,paste0(lifestage,"_abunm3_corr")]+1),subdat_win$lowdep[i],11,subdat_win$updep[i],
col=adjustcolor("blue",alpha=0.5),border=NA)
}
}
rect(0,lowbot[bot],100,5000,col="grey",border=NA) #Bottom depth
box()
}
}
mtext(side=1,bquote(paste(italic(.(species_name[species]))," winter abundance (log"["e"],"ind.",m^-3,"+1)")),line=1.2,cex=1,outer=TRUE,col="blue")
mtext(side=3,bquote(paste(italic(.(species_name[species]))," summer abundance (log"["e"],"ind.",m^-3,"+1)")),line=0.5,cex=1,outer=TRUE,col="red")
mtext(side=2,"Depth (m)",line=0.5,cex=1,outer=TRUE)
dev.off()
depthdat<-all_dat_depth[!duplicated(all_dat_depth$ID),] #Dataframe with 1 row per station
depthdat<-depthdat[,-c(13:42,50:53)] #Remove unnecessary columns
depthdat[,paste0(lifestages,"_wmd")]<-NA
depthdat[,paste0(lifestages,"_sd")]<-NA
depthint<-50
layers<-seq(0,max(depthdat$depth),by=depthint) #Top of depth intervals from surface to bottom
deptharray<-array(NA,dim=c(length(lifestages),length(layers),dim(depthdat)[1]))
dimnames(deptharray)<-list(lifestages,layers)
for (i in 1:length(depthdat$ID)){
station<-all_dat_depth[all_dat_depth$ID%in%depthdat$ID[i],]
#Depth intervals in station:
station_meters<-lapply(1:length(station$updep),function(x){c(round(station$updep[x]):round(station$lowdep[x]))})
#Average abundance per 50 m depth bin:
for(j in 1:length(layers)){
meters_incl<-seq(layers[j],layers[j]+depthint) #Meters in depth bin
intersect_m<-unlist(lapply(1:length(station_meters),function(x){length(intersect(unlist(station_meters[x]),meters_incl))})) #Overlap between depth bin and station intervals
station_layer<-station[intersect_m>=5, ] #Select observations with overlapping depth (min 5m)
if(dim(station_layer)[1]>0){
deptharray[,j,i]<-colMeans(station_layer[,paste0(lifestages,"_abunm3_corr")],na.rm=TRUE)
}
}
#Find  WMD&SD, following Aarflot et al. 2018, L&O
for(stage in lifestages){
abunm3<-deptharray[stage,,i]
#Check that there are positive values and more than one non-NA value
if(!all(is.na(abunm3)) & sum(abunm3,na.rm=TRUE)>0 & length(abunm3[!is.na (abunm3)])>1){
abunm3<-abunm3[!is.na(abunm3)]
depths<-as.numeric(names(abunm3))+depthint/2 #Mean depth of layers
wmean<-sum(sapply(1:length(abunm3),function(x)((depthint*abunm3[x]*depths[x])/sum(abunm3*depthint))))
depthdat[i,paste0(stage,"_wmd")]<-wmean
#To avoid NAs due to slight decimal difference when calculating wmean^2 and the base of WSD for 1 positive observation in R:
wsd_base<-sum(sapply(1:length(abunm3),function(x)((depthint*abunm3[x]*depths[x]^2)/sum(abunm3*depthint))))
if(all.equal(wsd_base,wmean^2)!=TRUE){
depthdat[i,paste0(stage,"_sd")]<-sqrt(wsd_base-wmean^2)
}else{
depthdat[i,paste0(stage,"_sd")]<-0
}
}
}
}
subdat_win<-depthdat[depthdat$month>=9 |depthdat$month<=4, ]
subdat_sum<-depthdat[depthdat$month<9 & depthdat$month>4, ]
ptsize=0.4
jitter_val<-0.3
par(mfcol=c(2,2),mar=rep(0.1,4),oma=c(1.5,2.5,1.5,0),mgp=c(3,0.5,0))
for(species in c("gla","hyp")){
lifestages_spec<-get(paste0("lifestages_",species))
labels_spec<-gsub("c","",gsub(species,"",lifestages_spec))
for(var in c("_wmd","_sd")){
meanval_win<-apply(subdat_win[,paste0(lifestages_spec,var)],2,FUN=mean,na.rm=TRUE)
meanval_sum<-apply(subdat_sum[,paste0(lifestages_spec,var)],2,FUN=mean,na.rm=TRUE)
#Test for significant differences:
sign_diff<-unlist(mapply(wilcox.test,subdat_win[,paste0(lifestages_spec,var)],subdat_sum[,paste0(lifestages_spec,var)])[3,])
print(paste0(lifestages_spec," Win:",round(meanval_win)," Sum:",round(meanval_sum),
" P:",round(sign_diff,3)))
sdval_win<-apply(subdat_win[,paste0(lifestages_spec,var)],2,FUN=sd,na.rm=TRUE)
sdval_sum<-apply(subdat_sum[,paste0(lifestages_spec,var)],2,FUN=sd,na.rm=TRUE)
if(var=="_wmd"){
stripchart(-subdat_win[,paste0(lifestages_spec,var)],method="jitter",jitter=jitter_val,
ylim=c(-2500,0),yaxs="i",vertical=TRUE,pch=20,col=adjustcolor("blue",alpha=0.4),
cex=ptsize,lwd=1,axes=FALSE,frame.plot=TRUE)
stripchart(-subdat_sum[,paste0(lifestages_spec,var)],method="jitter",jitter=jitter_val,
vertical=TRUE,pch=20,col=adjustcolor("red",alpha=0.2),cex=ptsize,lwd=1,add=TRUE)
if(species=="gla"){Axis(side=2,at=seq(-2000,0,1000),labels=seq(2000,0,-1000))}
}else{
stripchart(-subdat_win[,paste0(lifestages_spec,var)],method="jitter",ylim=c(-1500,0),yaxs="i",jitter=jitter_val,
vertical=TRUE,pch=20,col=adjustcolor("blue",alpha=0.4),cex=ptsize,lwd=1,axes=FALSE,frame.plot=TRUE)
stripchart(-subdat_sum[,paste0(lifestages_spec,var)],method="jitter",vertical=TRUE,jitter=jitter_val,
pch=20,col=adjustcolor("red",alpha=0.2),cex=ptsize,lwd=1,add=TRUE)
if(species=="gla"){Axis(side=2,at=seq(-1000,0,1000),labels=seq(1000,0,-1000))}
Axis(side=1,at=1:7,labels=labels_spec)
}
arrows(0.9:6.9,-(meanval_win+sdval_win),0.9:6.9,-(meanval_win-sdval_win),code=3,length=0.04,angle=90,lwd=1.7)
points(0.9:6.9,-meanval_win,pch=23,cex=1.35,bg="blue",lwd=1.6)
arrows(1.1:7.1,-(meanval_sum+sdval_sum),1.1:7.1,-(meanval_sum-sdval_sum),code=3,length=0.04,angle=90,lwd=1.7)
points(1.1:7.1,-meanval_sum,pch=23,cex=1.35,bg="red",lwd=1.6)
}
}
mtext(side=3,bquote(paste(bold(A.)," ",italic("C. glacialis"))),line=0,font=3,adj=0.2,outer=TRUE)
mtext(side=3,bquote(paste(bold(B.)," ",italic("C. hyperboreus"))),line=0,font=3,adj=0.8,outer=TRUE)
mtext(side=2,"WMD (m)",line=1.25,outer=TRUE,adj=.8)
mtext(side=2,"SD (m)",line=1.25,outer=TRUE,adj=.2)
var_table<-data.frame(wmd=unlist(subdat_win[,paste0(lifestages,"_wmd")]),
sd=unlist(subdat_win[,paste0(lifestages,"_sd")]),
stage=rep(lifestages,each=dim(subdat_win)[1]))
#ANOVA:
#max.aov <- aov(wmd~stage,data=var_table)
#plot(max.aov,2) #Test for normality in residuals
kruskal.test(wmd~stage,data=var_table)
#Since the test is significant, we use Wilcoxon Signed-Rank Test test to check which groups are different
#Note: Since the chance of type I errors increases with the number of tests, use conservative p-value.
#1: WMD
p_wmd <- matrix(NA, nrow= length(lifestages), ncol = length(lifestages), dimnames = list(lifestages,lifestages))
for (i in 1:ncol(p_wmd)){
for (j in 1:nrow(p_wmd)){
x<- wilcox.test(var_table$wmd[var_table$stage== lifestages[i]],var_table$wmd[var_table$stage== lifestages[j]])
p_wmd[j,i] <- x$p.value
}
}
#2: SD
kruskal.test(sd~stage,data=var_table)
p_sd <- matrix(NA, nrow= length(lifestages), ncol = length(lifestages), dimnames = list(lifestages,lifestages))
for (i in 1:ncol(p_sd)){
for (j in 1:nrow(p_sd)){
x<- wilcox.test(var_table$sd[var_table$stage== lifestages[i]],var_table$sd[var_table$stage== lifestages[j]])
p_sd[j,i] <- x$p.value
}
}
round(p_sd,3)
#Combine into one table (Table 1):
p_wmd[lower.tri(p_wmd)]<-NA
p_sd[upper.tri(p_sd,diag=TRUE)]<-NA
p_comb<-p_wmd
p_comb[is.na(p_comb)]<-p_sd[!is.na(p_sd)]
meanvals_wmd<-apply(subdat_win[,paste0(lifestages,"_wmd")],2,FUN=mean,na.rm=TRUE)
meanvals_sd<-apply(subdat_win[,paste0(lifestages,"_sd")],2,FUN=mean,na.rm=TRUE)
p_comb<-rbind(round(meanvals_wmd),p_comb)
p_comb<-cbind(c(NA,round(meanvals_sd)),p_comb)
p_comb
p_comb
last_win<-as.numeric(format(as.Date(paste(4,30,2010), format=c("%m %d %Y")),"%j"))
first_win<-as.numeric(format(as.Date(paste(9,1,2010), format=c("%m %d %Y")),"%j"))
xlims<-c(1,365)
upbot<-c(0,200,400,800)
lowbot<-c(200,400,800,5000)
species<-"hyp"
lifestages_spec<-get(paste0("lifestages_",species))
species<-"gla"
lifestages_spec<-get(paste0("lifestages_",species))
dev.off()
par(mfcol=c(7,4),mar=c(0.25,1,0.25,1),oma=c(2.5,3.5,1.5,0),mgp=c(3,0.4,0))
for(bot in 1:length(upbot)){
subdat<-depthdat[depthdat$depth>=upbot[bot] & depthdat$depth<lowbot[bot],]
ylims<-c(-lowbot[bot],0)
ypos<-round(seq(min(ylims),0,length.out=5))[2:5]
ylabs<--ypos
if(bot==length(upbot)){
ylims<-c(-2500,0)
ypos<-c(-2000,-1000,0)
ylabs<--ypos
}
for(stage in lifestages_spec){
label<-gsub(paste0(species,"c"),"",stage)
maxdep<-subdat[,paste0(stage,"_wmd")]
min_pres<-subdat[,paste0(stage,"_wmd")]+subdat[,paste0(stage,"_sd")]
max_pres<-subdat[,paste0(stage,"_wmd")]-subdat[,paste0(stage,"_sd")]
plot(subdat$julday,-maxdep,pch=20,cex=0.5,xlim=xlims,ylim=ylims,axes=FALSE,frame=TRUE,xaxs="i",yaxs="i")
segments(subdat$julday,-max_pres,subdat$julday,-min_pres,lwd=0.5)
#Illustrate winter:
rect(-10,min(ylims),last_win,0,col=adjustcolor("blue",alpha.f=0.1),border=NA)
rect(first_win,min(ylims),400,0,col=adjustcolor("blue",alpha.f=0.1),border=NA)
Axis(side=2,at=ypos,labels=ylabs)
if(stage==lifestages_spec[7]){Axis(side=1)}
if(bot==1){mtext(side=2,label,line=2.75)}
if(stage==lifestages_spec[1]){
mtext(side=3,bquote(paste(bold(.(LETTERS[bot])),". ",.(upbot[bot]),"-",.(lowbot[bot]),"m")),line=0)}
}
}
mtext(side=1,"Day-of-year",line=1.25,outer=TRUE)
mtext(side=2,"Depth (m)",line=0.5,outer=TRUE)
####Relationship between WMD/SD and latitude/bottom depth in winter (Fig. 7, Table 2)####
subdat<-depthdat[depthdat$month>=9 |depthdat$month<=4,]
#Positive correlation between latitude and bottom depth in dataset:
cor.test(subdat$lat,subdat$depth,method="kendall")
#Estimate regression coefficients from linear models (Table 2):
lm_array<-array(NA,dim=c(length(lifestages),2,2,2,2))
dimnames(lm_array)<-list(lifestages,c("Uni","Multi"),c("depth","lat"),c("WMD","SD"),c("b","p"))
cols<- c("#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f")
xlims_depth<-c(0,max(subdat$depth)+20)
xlims_lat<-c(min(subdat$lat)-1,max(subdat$lat)+1)
ylims<-c(-2500,0)
#Dataframes to predict response at fixed value of the other covariate:
predframe_depth<-data.frame(depth=seq(min(xlims_depth),max(xlims_depth),length.out = 5),
lat=mean(subdat$lat))
predframe_lat<-data.frame(lat=seq(min(xlims_lat),max(xlims_lat),length.out = 5),
depth=mean(subdat$depth))
par(mfcol=c(2,4),mar=rep(0.15,4),oma=c(3,3,1.5,0),mgp=c(3,0.4,0))
for(species in c("gla","hyp")){
lifestages_spec<-get(paste0("lifestages_",species))
for(var in  c("depth","lat")){
#1:WMD:
plot(1,type="n",ylim=ylims,xlim=get(paste0("xlims_",var)),axes=FALSE,frame=TRUE,yaxs="i",xaxs="i")
if(var=="depth" & species=="gla"){Axis(side=2,at=seq(0,-4000,-1000),labels=seq(0,4000,1000))}
#Plot data points:
for(i in 1:length(lifestages_spec)){
subdat_stage<-subdat[!is.na(subdat[,paste0(lifestages_spec[i],"_wmd")])&
subdat[,paste0(lifestages_spec[i],"_wmd")]<=subdat$depth,]
wmd<-subdat_stage[,paste0(lifestages_spec[i],"_wmd")]
points(subdat_stage[,var],-wmd,pch=21,cex=1,bg=adjustcolor(cols[i],alpha.f=0.5),lwd=0.5)
if(var=="depth" & lifestages_spec[i]=="Cglac6m"){
legend("bottomleft",gsub("glac","",lifestages_spec),pch=21,pt.bg=adjustcolor(cols,alpha.f=0.5),bty="n",pt.cex=2)
}
}
#Plot predictions from linear model:
for(i in 1:length(lifestages_spec)){
subdat_stage<-subdat[!is.na(subdat[,paste0(lifestages_spec[i],"_wmd")])&
subdat[,paste0(lifestages_spec[i],"_wmd")]<=subdat$depth,]
wmd<-subdat_stage[,paste0(lifestages_spec[i],"_wmd")]
lm_wmd_multi<-lm(wmd~depth + lat, data=subdat_stage)
pred<-predict.lm(lm_wmd_multi,newdata=get(paste0("predframe_",var)))
points(get(paste0("predframe_",var))[,1],-pred,type="l",col=cols[i],lwd=1.5)
}
#SD:
plot(1,type="n",ylim=ylims,xlim=get(paste0("xlims_",var)),axes=FALSE,frame=TRUE,yaxs="i",xaxs="i")
Axis(side=1)
if(var=="depth" & species=="gla"){Axis(side=2,at=seq(0,-4000,-1000),labels=seq(0,4000,1000))}
if(var=="depth"){mtext(side=1,"Bottom depth (m)",line=1.5,adj=0.2,outer=FALSE)}
if(var=="lat"){mtext(side=1,"Latitude (°N)",line=1.5,adj=0.75,outer=FALSE)}
#Plot data points:
for(i in 1:length(lifestages_spec)){
subdat_stage<-subdat[!is.na(subdat[,paste0(lifestages_spec[i],"_wmd")])&
subdat[,paste0(lifestages_spec[i],"_wmd")]<=subdat$depth,]
sd<-subdat_stage[,paste0(lifestages_spec[i],"_sd")]
points(subdat_stage[,var],-sd,pch=21,cex=1,bg=adjustcolor(cols[i],alpha.f=0.5),lwd=0.5)
}
#Plot predictions from linear model:
for(i in 1:length(lifestages_spec)){
subdat_stage<-subdat[!is.na(subdat[,paste0(lifestages_spec[i],"_wmd")])&
subdat[,paste0(lifestages_spec[i],"_wmd")]<=subdat$depth,]
sd<-subdat_stage[,paste0(lifestages_spec[i],"_sd")]
lm_sd_multi<-lm(sd~depth + lat, data=subdat_stage)
pred<-predict.lm(lm_sd_multi,newdata=get(paste0("predframe_",var)))
points(get(paste0("predframe_",var))[,1],-pred,type="l",col=cols[i],lwd=1.5)
}
}
}
mtext(side=3,bquote(paste(bold(A.)," ",italic("C. glacialis"))),line=0,font=3,adj=0.2,outer=TRUE)
mtext(side=3,bquote(paste(bold(B.)," ",italic("C. hyperboreus"))),line=0,font=3,adj=0.8,outer=TRUE)
mtext(side=2,"WMD (m)",line=1.5,outer=TRUE,adj=.8)
mtext(side=2,"SD (m)",line=1.5,outer=TRUE,adj=.2)
#####WMD/SD relative to interval from surface to bottom (Fig. 8, Table 3)####
#Estimate regression coefficients from linear models:
lm_array<-array(NA,dim=c(length(lifestages),2,2,2,2))
dimnames(lm_array)<-list(lifestages,c("Uni","Multi"),c("depth","lat"),c("WMD","SD"),c("b","p"))
for(i in 1:length(lifestages)){
subdat_stage<-subdat[!is.na(subdat[,paste0(lifestages[i],"_wmd")])&
subdat[,paste0(lifestages[i],"_wmd")]<=subdat$depth,]
wmd_perc<-100*subdat_stage[,paste0(lifestages[i],"_wmd")]/subdat_stage$depth
sd_perc<-100*subdat_stage[,paste0(lifestages[i],"_sd")]/subdat_stage$depth
for(var in  c("depth","lat")){
lm_wmd_uni<-lm(wmd_perc~subdat_stage[,var])
lm_array[lifestages[i],"Uni",var,"WMD","b"]<-summary(lm_wmd_uni)$coefficients[2, 1]
lm_array[lifestages[i],"Uni",var,"WMD","p"]<-summary(lm_wmd_uni)$coefficients[2, 4]
lm_sd_uni<-lm(sd_perc~subdat_stage[,var])
lm_array[lifestages[i],"Uni",var,"SD","b"]<-summary(lm_sd_uni)$coefficients[2, 1]
lm_array[lifestages[i],"Uni",var,"SD","p"]<-summary(lm_sd_uni)$coefficients[2, 4]
}
lm_wmd_multi<-lm(wmd_perc~subdat_stage$depth + subdat_stage$lat)
lm_array[lifestages[i],"Multi","depth","WMD","b"]<-summary(lm_wmd_multi)$coefficients[2, 1]
lm_array[lifestages[i],"Multi","depth","WMD","p"]<-summary(lm_wmd_multi)$coefficients[2, 4]
lm_array[lifestages[i],"Multi","lat","WMD","b"]<-summary(lm_wmd_multi)$coefficients[3, 1]
lm_array[lifestages[i],"Multi","lat","WMD","p"]<-summary(lm_wmd_multi)$coefficients[3, 4]
lm_sd_multi<-lm(sd_perc~subdat_stage$depth + subdat_stage$lat)
lm_array[lifestages[i],"Multi","depth","SD","b"]<-summary(lm_sd_multi)$coefficients[2, 1]
lm_array[lifestages[i],"Multi","depth","SD","p"]<-summary(lm_sd_multi)$coefficients[2, 4]
lm_array[lifestages[i],"Multi","lat","SD","b"]<-summary(lm_sd_multi)$coefficients[3, 1]
lm_array[lifestages[i],"Multi","lat","SD","p"]<-summary(lm_sd_multi)$coefficients[3, 4]
}
#Plot WMD & SD in separate panels with stages as different colors points (Fig. 8):
cols<- c("#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f")
xlims_depth<-c(0,max(subdat$depth)+20)
xlims_lat<-c(min(subdat$lat)-1,max(subdat$lat)+1)
ylims<-c(-100,0)
#Dataframes to predict response at fixed value of the other covariate:
predframe_depth<-data.frame(depth=seq(min(xlims_depth),max(xlims_depth),length.out = 5),
lat=mean(subdat$lat))
predframe_lat<-data.frame(lat=seq(min(xlims_lat),max(xlims_lat),length.out = 5),
depth=mean(subdat$depth))
par(mfcol=c(2,4),mar=rep(0.15,4),oma=c(3,3,1.5,0),mgp=c(3,0.4,0))
for(species in c("gla","hyp")){
lifestages_spec<-get(paste0("lifestages_",species))
for(var in  c("depth","lat")){
#1:WMD:
plot(1,type="n",ylim=ylims,xlim=get(paste0("xlims_",var)),axes=FALSE,frame=TRUE,yaxs="i",xaxs="i")
if(var=="depth" & species=="gla"){Axis(side=2,at=seq(0,-80,-40),labels=seq(0,80,40))}
#Plot data points:
for(i in 1:length(lifestages_spec)){
subdat_stage<-subdat[!is.na(subdat[,paste0(lifestages_spec[i],"_wmd")])&
subdat[,paste0(lifestages_spec[i],"_wmd")]<=subdat$depth,]
wmd<-100*subdat_stage[,paste0(lifestages_spec[i],"_wmd")]/subdat_stage$depth
points(subdat_stage[,var],-wmd,pch=21,cex=1,bg=adjustcolor(cols[i],alpha.f=0.5),lwd=0.5)
}
#Plot predictions from linear model:
for(i in 1:length(lifestages_spec)){
subdat_stage<-subdat[!is.na(subdat[,paste0(lifestages_spec[i],"_wmd")])&
subdat[,paste0(lifestages_spec[i],"_wmd")]<=subdat$depth,]
wmd<-100*subdat_stage[,paste0(lifestages_spec[i],"_wmd")]/subdat_stage$depth
lm_wmd_multi<-lm(wmd~depth + lat, data=subdat_stage)
pred<-predict.lm(lm_wmd_multi,newdata=get(paste0("predframe_",var)))
points(get(paste0("predframe_",var))[,1],-pred,type="l",col=cols[i],lwd=1.5)
}
#SD:
plot(1,type="n",ylim=ylims,xlim=get(paste0("xlims_",var)),axes=FALSE,frame=TRUE,yaxs="i",xaxs="i")
Axis(side=1)
if(var=="depth" & species=="gla"){Axis(side=2,at=seq(0,-80,-40),labels=seq(0,80,40))}
if(var=="depth"){mtext(side=1,"Bottom depth (m)",line=1.5,adj=0.2,outer=FALSE)}
if(var=="lat"){mtext(side=1,"Latitude (°N)",line=1.5,adj=0.75,outer=FALSE)}
#Plot data points:
for(i in 1:length(lifestages_spec)){
subdat_stage<-subdat[!is.na(subdat[,paste0(lifestages_spec[i],"_wmd")])&
subdat[,paste0(lifestages_spec[i],"_wmd")]<=subdat$depth,]
sd<-100*subdat_stage[,paste0(lifestages_spec[i],"_sd")]/subdat_stage$depth
points(subdat_stage[,var],-sd,pch=21,cex=1,bg=adjustcolor(cols[i],alpha.f=0.5),lwd=0.5)
}
#Plot predictions from linear model:
for(i in 1:length(lifestages_spec)){
subdat_stage<-subdat[!is.na(subdat[,paste0(lifestages_spec[i],"_wmd")])&
subdat[,paste0(lifestages_spec[i],"_wmd")]<=subdat$depth,]
sd<-100*subdat_stage[,paste0(lifestages_spec[i],"_sd")]/subdat_stage$depth
lm_sd_multi<-lm(sd~depth + lat, data=subdat_stage)
pred<-predict.lm(lm_sd_multi,newdata=get(paste0("predframe_",var)))
points(get(paste0("predframe_",var))[,1],-pred,type="l",col=cols[i],lwd=1.5)
}
if(var=="depth" & lifestages_spec[i]=="Cglac6m"){
legend("bottomleft",gsub("glac","",lifestages_spec),pch=21,pt.bg=adjustcolor(cols,alpha.f=0.5),bty="n",pt.cex=2)
}
}
}
mtext(side=3,bquote(paste(bold(A.)," ",italic("C. glacialis"))),line=0,font=3,adj=0.2,outer=TRUE)
mtext(side=3,bquote(paste(bold(B.)," ",italic("C. hyperboreus"))),line=0,font=3,adj=0.8,outer=TRUE)
mtext(side=2,"WMD (%)",line=1.5,outer=TRUE,adj=.8)
mtext(side=2,"SD (%)",line=1.5,outer=TRUE,adj=.2)
names(all_dat)
names(all_dat)
rm(all_dat)
load(paste0("all_dat.rda"))
names(all_dat)
names(all_dat[,c(1:3,11,4:7,12,10,8,9,13:60)])
levels(all_dat$dataset)
all_dat$dataset<-as.factor(all_dat$dataset)
levels(all_dat$dataset)
all_dat$dataset<-factor(all_dat$dataset)
levels(all_dat$dataset)
dim(all_dat)
dim(all_dat[,c(1:3,11,4:7,12,10,8,9,13:60)])
names(all_dat[,c(1:3,11,4:7,12,10,8,9,13:60)])
names(all_dat)
all_dat<-all_dat[,c(1:3,11,4:7,12,10,8,9,13:60)]
names(all_dat)
save(all_dat,file="all_dat.rda")
library(maps)
library(mapproj)
source("arcticmap.r") #Source to plot polar-centered map
#source("../rscripts/image_scale.R")
lifestages<-c(paste0("Cglac",1:5),paste0("Cglac6",c("f","m")),paste0("Chypc",1:5),paste0("Chypc6",c("f","m")))
lifestages_gla<-c(paste0("Cglac",1:5),paste0("Cglac6",c("f","m")))
lifestages_hyp<-c(paste0("Chypc",1:5),paste0("Chypc6",c("f","m")))
load(paste0("all_dat.rda"))
#Only select data with 2 or more depth layers:
#Create factor to find observations from same station (same day and location but different depth)
names(all_dat)
all_dat$ID<-do.call(paste,all_dat[,c(1:5,11:12)])
all_dat_depth<-data.frame(matrix(ncol=ncol(all_dat),nrow=0))
colnames(all_dat_depth)<-colnames(all_dat)
for (i in 1:length(unique(all_dat$ID))){
station<-all_dat[all_dat$ID%in%unique(all_dat$ID)[i],]
bottomdep<-unique(station$depth)
station<-station[station$updep<bottomdep,] #Remove any samples with upper depth > bottom depth
if(dim(station)[1]>=2){
all_dat_depth<-rbind(all_dat_depth,station)
}
}
####Spatial distribution in winter (Fig. 1)####
#Ind.m3 Divided by bottom depth, all stages summed:
summary(all_dat)
library(maps)
library(mapproj)
source("arcticmap.r") #Source to plot polar-centered map
#source("../rscripts/image_scale.R")
lifestages<-c(paste0("Cglac",1:5),paste0("Cglac6",c("f","m")),paste0("Chypc",1:5),paste0("Chypc6",c("f","m")))
lifestages_gla<-c(paste0("Cglac",1:5),paste0("Cglac6",c("f","m")))
lifestages_hyp<-c(paste0("Chypc",1:5),paste0("Chypc6",c("f","m")))
load(paste0("all_dat.rda"))
#Only select data with 2 or more depth layers:
#Create factor to find observations from same station (same day and location but different depth)
all_dat$ID<-do.call(paste,all_dat[,c(1:5,11:12)])
all_dat_depth<-data.frame(matrix(ncol=ncol(all_dat),nrow=0))
colnames(all_dat_depth)<-colnames(all_dat)
options(warn=2)
for (i in 1:length(unique(all_dat$ID))){
station<-all_dat[all_dat$ID%in%unique(all_dat$ID)[i],]
bottomdep<-unique(station$depth)
station<-station[station$updep<bottomdep,] #Remove any samples with upper depth > bottom depth
if(dim(station)[1]>=2){
all_dat_depth<-rbind(all_dat_depth,station)
}
}
####Spatial distribution in winter (Fig. 1)####
#Ind.m3 Divided by bottom depth, all stages summed:
i
station
unique(station$depth)
names(all_dat[,c(1:5,11:12)])
names(all_dat)
names(all_dat[,c(1:3,5:6,11:12)])
all_dat$ID<-do.call(paste,all_dat[,c(1:3,5:6,11:12)])
all_dat_depth<-data.frame(matrix(ncol=ncol(all_dat),nrow=0))
colnames(all_dat_depth)<-colnames(all_dat)
options(warn=2)
for (i in 1:length(unique(all_dat$ID))){
station<-all_dat[all_dat$ID%in%unique(all_dat$ID)[i],]
bottomdep<-unique(station$depth)
station<-station[station$updep<bottomdep,] #Remove any samples with upper depth > bottom depth
if(dim(station)[1]>=2){
all_dat_depth<-rbind(all_dat_depth,station)
}
}
####Spatial distribution in winter (Fig. 1)####
depthdat<-all_dat_depth[!duplicated(all_dat_depth$ID),] #Dataframe with 1 row per station
names(depthdat[,-c(13:60)] )
depthdat<-depthdat[,-c(13:60)] #Remove unnecessary columns
depthdat[,paste0(lifestages,"_wmd")]<-NA
depthdat[,paste0(lifestages,"_sd")]<-NA
depthint<-50
layers<-seq(0,max(depthdat$depth),by=depthint) #Top of depth intervals from surface to bottom
deptharray<-array(NA,dim=c(length(lifestages),length(layers),dim(depthdat)[1]))
dimnames(deptharray)<-list(lifestages,layers)
for (i in 1:length(depthdat$ID)){
station<-all_dat_depth[all_dat_depth$ID%in%depthdat$ID[i],]
#Depth intervals in station:
station_meters<-lapply(1:length(station$updep),function(x){c(round(station$updep[x]):round(station$lowdep[x]))})
#Average abundance per 50 m depth bin:
for(j in 1:length(layers)){
meters_incl<-seq(layers[j],layers[j]+depthint) #Meters in depth bin
intersect_m<-unlist(lapply(1:length(station_meters),function(x){length(intersect(unlist(station_meters[x]),meters_incl))})) #Overlap between depth bin and station intervals
station_layer<-station[intersect_m>=5, ] #Select observations with overlapping depth (min 5m)
if(dim(station_layer)[1]>0){
deptharray[,j,i]<-colMeans(station_layer[,paste0(lifestages,"_abunm3_corr")],na.rm=TRUE)
}
}
#Find  WMD&SD, following Aarflot et al. 2018, L&O
for(stage in lifestages){
abunm3<-deptharray[stage,,i]
#Check that there are positive values and more than one non-NA value
if(!all(is.na(abunm3)) & sum(abunm3,na.rm=TRUE)>0 & length(abunm3[!is.na (abunm3)])>1){
abunm3<-abunm3[!is.na(abunm3)]
depths<-as.numeric(names(abunm3))+depthint/2 #Mean depth of layers
wmean<-sum(sapply(1:length(abunm3),function(x)((depthint*abunm3[x]*depths[x])/sum(abunm3*depthint))))
depthdat[i,paste0(stage,"_wmd")]<-wmean
#To avoid NAs due to slight decimal difference when calculating wmean^2 and the base of WSD for 1 positive observation in R:
wsd_base<-sum(sapply(1:length(abunm3),function(x)((depthint*abunm3[x]*depths[x]^2)/sum(abunm3*depthint))))
if(all.equal(wsd_base,wmean^2)!=TRUE){
depthdat[i,paste0(stage,"_sd")]<-sqrt(wsd_base-wmean^2)
}else{
depthdat[i,paste0(stage,"_sd")]<-0
}
}
}
}
####Boxplot of variation in WMD/SD per stage (Fig. 4)####
subdat_win<-depthdat[depthdat$month>=9 |depthdat$month<=4, ]
subdat_sum<-depthdat[depthdat$month<9 & depthdat$month>4, ]
ptsize=0.4
jitter_val<-0.3
par(mfcol=c(2,2),mar=rep(0.1,4),oma=c(1.5,2.5,1.5,0),mgp=c(3,0.5,0))
for(species in c("gla","hyp")){
lifestages_spec<-get(paste0("lifestages_",species))
labels_spec<-gsub("c","",gsub(species,"",lifestages_spec))
for(var in c("_wmd","_sd")){
meanval_win<-apply(subdat_win[,paste0(lifestages_spec,var)],2,FUN=mean,na.rm=TRUE)
meanval_sum<-apply(subdat_sum[,paste0(lifestages_spec,var)],2,FUN=mean,na.rm=TRUE)
#Test for significant differences:
sign_diff<-unlist(mapply(wilcox.test,subdat_win[,paste0(lifestages_spec,var)],subdat_sum[,paste0(lifestages_spec,var)])[3,])
print(paste0(lifestages_spec," Win:",round(meanval_win)," Sum:",round(meanval_sum),
" P:",round(sign_diff,3)))
sdval_win<-apply(subdat_win[,paste0(lifestages_spec,var)],2,FUN=sd,na.rm=TRUE)
sdval_sum<-apply(subdat_sum[,paste0(lifestages_spec,var)],2,FUN=sd,na.rm=TRUE)
if(var=="_wmd"){
stripchart(-subdat_win[,paste0(lifestages_spec,var)],method="jitter",jitter=jitter_val,
ylim=c(-2500,0),yaxs="i",vertical=TRUE,pch=20,col=adjustcolor("blue",alpha=0.4),
cex=ptsize,lwd=1,axes=FALSE,frame.plot=TRUE)
stripchart(-subdat_sum[,paste0(lifestages_spec,var)],method="jitter",jitter=jitter_val,
vertical=TRUE,pch=20,col=adjustcolor("red",alpha=0.2),cex=ptsize,lwd=1,add=TRUE)
if(species=="gla"){Axis(side=2,at=seq(-2000,0,1000),labels=seq(2000,0,-1000))}
}else{
stripchart(-subdat_win[,paste0(lifestages_spec,var)],method="jitter",ylim=c(-1500,0),yaxs="i",jitter=jitter_val,
vertical=TRUE,pch=20,col=adjustcolor("blue",alpha=0.4),cex=ptsize,lwd=1,axes=FALSE,frame.plot=TRUE)
stripchart(-subdat_sum[,paste0(lifestages_spec,var)],method="jitter",vertical=TRUE,jitter=jitter_val,
pch=20,col=adjustcolor("red",alpha=0.2),cex=ptsize,lwd=1,add=TRUE)
if(species=="gla"){Axis(side=2,at=seq(-1000,0,1000),labels=seq(1000,0,-1000))}
Axis(side=1,at=1:7,labels=labels_spec)
}
arrows(0.9:6.9,-(meanval_win+sdval_win),0.9:6.9,-(meanval_win-sdval_win),code=3,length=0.04,angle=90,lwd=1.7)
points(0.9:6.9,-meanval_win,pch=23,cex=1.35,bg="blue",lwd=1.6)
arrows(1.1:7.1,-(meanval_sum+sdval_sum),1.1:7.1,-(meanval_sum-sdval_sum),code=3,length=0.04,angle=90,lwd=1.7)
points(1.1:7.1,-meanval_sum,pch=23,cex=1.35,bg="red",lwd=1.6)
}
}
mtext(side=3,bquote(paste(bold(A.)," ",italic("C. glacialis"))),line=0,font=3,adj=0.2,outer=TRUE)
mtext(side=3,bquote(paste(bold(B.)," ",italic("C. hyperboreus"))),line=0,font=3,adj=0.8,outer=TRUE)
mtext(side=2,"WMD (m)",line=1.25,outer=TRUE,adj=.8)
mtext(side=2,"SD (m)",line=1.25,outer=TRUE,adj=.2)
